#!/system/bin/sh
# PROJECT MOD BOOST EDITION  
# NITRO X ENGINE SERIES
# VERSION SPARK EDITION
# DEV BY K1KS
# X05TCP 
#=======================================================================#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
#=======================================================================#

PATH=$PATH:/system/xbin:/sbin:/vendor/bin:/system/sbin:/system/bin
if [ -d "/data/local/busybox*/xbin" ]; then PATH=$PATH:`ls -d /data/local/busybox*/xbin 2>/dev/null`; fi

PMB=/data/ModBoost/X05TCP.log

if [ -e $PMB ]; then
busybox	rm $PMB;
fi;

busybox touch $PMB;
busybox echo "*** NITRO X ENGINE ***" | tee -a $PMB;
busybox echo "" | tee -a $PMB;
busybox echo "$( date +"%m-%d-%Y %H:%M:%S" ) Executing X05TCP..." | tee -a $PMB;
busybox echo "" | tee -a $PMB;

# Wifi Sleep 
if
return_value=$($sqlite /data/data/com.android.providers.settings/databases/settings.db "select value from secure where name='wifi_idle_ms'")

sqlite3=/system/xbin/sqlite3
wifi_wait_time=20000

if [ $return_value="" ]; then
$sqlite3 /data/data/com.android.providers.settings/databases/settings.db "insert into secure (name, value) values ('wifi_idle_ms', $wifi_wait_time)"
fi;

$sqlite3 /data/data/com.android.providers.settings/databases/settings.db "update secure set value=$wifi_wait_time where name='wifi_idle_ms'"
return_value=$($sqlite3 /data/data/com.android.providers.settings/databases/settings.db "select value from secure where name='wifi_idle_ms'")

then
echo "...Wifi Sleep = Active..." | tee -a $PMB; else
echo "...Wifi Sleep = Not Active..." | tee -a $PMB;
fi;

# TCP read/write
busybox chmod -f 644 /proc/sys/net/* 2>/dev/null
busybox chmod -f 644 /proc/sys/net/* 2>/dev/null
busybox sysctl -e -w net.ipv4.ip_dynaddr=0
busybox sysctl -e -w net.ipv4.ip_no_pmtu_disc=0
busybox sysctl -e -w net.ipv4.tcp_ecn=0
busybox sysctl -e -w net.ipv4.tcp_fack=1
busybox sysctl -e -w net.ipv4.tcp_max_syn_backlog=4096
busybox sysctl -e -w net.ipv4.tcp_moderate_rcvbuf=1
busybox sysctl -e -w net.ipv4.tcp_rmem=187000 187000 187000
busybox sysctl -e -w net.ipv4.tcp_rfc1337=1
busybox sysctl -e -w net.ipv4.tcp_sack=1
busybox sysctl -e -w net.ipv4.tcp_timestamps=1
busybox sysctl -e -w net.ipv4.tcp_window_scaling=1
busybox sysctl -e -w net.ipv4.tcp_no_metrics_save=1

busybox sleep 1

if [ /proc/sys/net/ipv4/tcp_max_syn_backlog=4096 ]; then
busybox echo "...Optimization TCP Read/Write= Active..." | tee -a $PMB; else
busybox echo "...Optimization TCP Read/Write = Not Active..." | tee -a $PMB;
fi;

# Wireless Speed Tweaks
setprop ro.ril.hep 1;
setprop ro.ril.hsxpa 3;
setprop ro.ril.gprsclass 16;
setprop net.tcp.buffersize.default 6144,87380,110208,6144,16384,110208;
setprop net.tcp.buffersize.wifi 262144,524288,1048576,262144,524288,1048576;
setprop net.tcp.buffersize.lte 262144,524288,3145728,262144,524288,3145728;
setprop net.tcp.buffersize.hsdpa 6144,262144,1048576,6144,262144,1048576;
setprop net.tcp.buffersize.evdo_b 6144,262144,1048576,6144,262144,1048576;
setprop net.tcp.buffersize.umts 6144,87380,110208,6144,16384,110208;
setprop net.tcp.buffersize.hspa 6144,87380,262144,6144,16384,262144;
setprop net.tcp.buffersize.gprs 6144,8760,11680,6144,8760,11680;
setprop net.tcp.buffersize.edge 6144,26280,35040,6144,16384,35040;

busybox echo "...Optimization Buffersize NET/TCP = Active..." | tee -a $PMB;
busybox echo "" | tee -a $PMB;
busybox echo "$( date +"%m-%d-%Y %H:%M:%S" ) X05TCP is Succesfully Activated..." | tee -a $PMB;
